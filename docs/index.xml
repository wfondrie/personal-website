<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Will Fondrie, a postdoc in the Noble lab at the UW</title>
    <link>/</link>
    <description>Recent content on Will Fondrie, a postdoc in the Noble lab at the UW</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 04 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building PyTorch on CentOS 6</title>
      <link>/2018/12/building-pytorch-on-centos-6/</link>
      <pubDate>Tue, 04 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/12/building-pytorch-on-centos-6/</guid>
      <description>PyTorch is a powerful deep learning framework for Python. However, PyTorch has been built against newer versions of glibc (2.14 and greater) for since its version 0.4.0 release. This causes a problem for those of us stuck on older systems. In my case, we have machines running CentOS 6.8 with glibc 2.12. In this post, I&amp;rsquo;ll detail how I&amp;rsquo;ve successfully built PyTorch 0.4.1 from source against glibc 2.12. This may also work for other versions, but your mileage may vary.</description>
    </item>
    
    <item>
      <title></title>
      <link>/1/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/</guid>
      <description>Building PyTorch on CentOS 6 /*! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */ !function(a,b){&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return b(a)}:b(a)}(&#34;undefined&#34;!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l=&#34;1.11.3&#34;,m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:&#34;&#34;,length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0a?b:0);return this.pushStack(c=0&amp;&amp;bc?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(&#34;boolean&#34;==typeof g&amp;&amp;(j=g,g=arguments[h]||{},h++),&#34;object&#34;==typeof g||m.isFunction(g)||(g={}),h===i&amp;&amp;(g=this,h--);ih;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&amp;&amp;(j&amp;&amp;c&amp;&amp;(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&amp;&amp;m.isArray(a)?a:[]):f=a&amp;&amp;m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&amp;&amp;(g[d]=c));return g},m.extend({expando:&#34;jQuery&#34;+(l+Math.random()).replace(/\D/g,&#34;&#34;),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return&#34;function&#34;===m.type(a)},isArray:Array.isArray||function(a){return&#34;array&#34;===m.type(a)},isWindow:function(a){return null!=a&amp;&amp;a==a.window},isNumeric:function(a){return!m.isArray(a)&amp;&amp;a-parseFloat(a)+1=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||&#34;object&#34;!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&amp;&amp;!j.call(a,&#34;constructor&#34;)&amp;&amp;!j.call(a.constructor.prototype,&#34;isPrototypeOf&#34;))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?</description>
    </item>
    
    <item>
      <title></title>
      <link>/pubs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/pubs/</guid>
      <description>Peer-Reviewed Publications 2018  Liang T, Leung LM, Opene B, Fondrie WE, Lee YI, Chandler CE, Yoon SH, Doi Y, Ernst RK, Goodlett DR. (2018) Rapid microbial identification and antibiotic resistance detection by mass spectrometric analysis of membrane lipids. Anal Chem. PMID: 30571097 [PubMed] [Journal Site]
 Fondrie WE, Liang T, Oyler BL, Leung LM, Ernst RK, Strickland DK, Goodlett DR. (2018) Pathogen Identification Direct From Polymicrobial Specimens Using Membrane Glycolipids.</description>
    </item>
    
    <item>
      <title></title>
      <link>/software/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/software/</guid>
      <description> Software  ppx {python} The ppx package provides a simple means to access the ProteomeXchange repository from Python. Using ProteomeXchange identifiers, the user can retrieve metadata associated with a project and download project files from PRIDE. [GitHub] [Docs] [PyPI]  </description>
    </item>
    
    <item>
      <title></title>
      <link>/talks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/talks/</guid>
      <description> Recent Talks  Detecting antibiotic resistance by MALDI-TOF analysis of bacterial membrane glycolipids. Fondrie WE, Leung LM, Strickland DK, Ernst RK, Goodlett DR. ASMS Annual Conference on Mass Spectrometry and Allied Topics. June 4, 2017. Indianapolis, IN
 LRP1 modulates TGF-β signaling in the descending thoracic aorta. Fondrie WE, Muratoglu SC, Hampton B, Migliorini M, Galisteo R, Strickland DK. UMB Molecular Medicine Research Retreat. October 6, 2016. Baltimore, MD  </description>
    </item>
    
    <item>
      <title></title>
      <link>/wordcloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/wordcloud/</guid>
      <description>Here’s the code to make my word cloud:
# Code to make the word cloud below # Load packages ---------------------------------------------------------------- suppressMessages(library(tidyverse, quietly = T)) # hide startup message library(tidytext, quietly = T) library(httr, quietly = T) library(xml2, quietly = T) library(wordcloud, quietly = T) set.seed(9621) # for reproducibility # Query pubmed using Entrez eutils ---------------------------------------------- queryBase &amp;lt;- c(&amp;quot;https://eutils.ncbi.nlm.nih.gov/entrez/eutils/&amp;quot;) # get UIDs for articles uids &amp;lt;- GET(paste0(queryBase, &amp;quot;esearch.fcgi?db=pubmed&amp;amp;term=fondrie[author]&amp;quot;)) # extract UIDs from xml xml &amp;lt;- content(uids) nodes &amp;lt;- xml_find_all(xml, &amp;quot;//Id&amp;quot;) uidStr &amp;lt;- paste(xml_text(nodes), collapse = &amp;quot;,&amp;quot;) # get abstracts abstracts &amp;lt;- GET(paste0(queryBase, &amp;quot;efetch.</description>
    </item>
    
  </channel>
</rss>